on:
  push:
    branches:
      - main

name: Release

jobs:
  build_docker:
    name: Build Docker image for ${{ matrix.os }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux-armv6
            dockerfile: rpizw.Dockerfile
          - os: linux-armv7
            dockerfile: rpi3.Dockerfile

    steps:
      - uses: actions/checkout@v3
      - name: Verify Changed files
        uses: tj-actions/changed-files@v35
        id: verify-changed-files
        with:
          since_last_remote_commit: true
          files: ${{ matrix.dockerfile }}
          
      - name: Log in to Docker Hub
        if: steps.verify-changed-files.outputs.any_changed == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        if: steps.verify-changed-files.outputs.any_changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/logger-${{ matrix.os }}:latest


  build_released_binary:
    needs: build_docker
    name: Create binary release for ${{ matrix.os }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: arm-unknown-linux-gnueabihf
            os: linux-armv6
          - target: armv7-unknown-linux-gnueabihf
            os: linux-armv7
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: moonrepo/setup-rust@v0
        with:
          targets: '${{ matrix.target }}'
      - name: Build release binary for ${{ matrix.os }}
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }} --verbose --bin logger
      - uses: actions/upload-artifact@v3
        with:
          name: logger-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/logger

  github_release:
    needs: build_released_binary
    name: Create GitHub release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.job_output.outputs.tag }}
    steps:
      - uses: actions/checkout@v3
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - name: Output
        id: job_output
        run: echo "tag=${{ steps.tag_version.outputs.new_tag }}" >> "$GITHUB_OUTPUT"

  upload_artifact:
    needs: github_release
    name: Upload release artifact
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: arm-unknown-linux-gnueabihf
            os: linux-armv6
          - target: armv7-unknown-linux-gnueabihf
            os: linux-armv7
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: logger-${{ matrix.target }}
          path: ./${{ matrix.target }}
      - name: List output
        run: echo ${{ needs.github_release.outputs.tag }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./${{ matrix.target }}
          asset_name: logger-${{ matrix.os }}
          tag: ${{ needs.github_release.outputs.tag }}
          overwrite: true
